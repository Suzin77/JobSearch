{% extends 'base.html.twig' %}

{% block body %}

    
    <canvas id="my" width="1080" height= "600"></canvas>
    <canvas id="mostPopular" width="1080" height= "600"></canvas>
    <canvas id="line" width="1080" height= "600"></canvas>


    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js" integrity="sha256-xKeoJ50pzbUGkpQxDYHD7o7hxe0LaOGeguUidbq6vis=" crossorigin="anonymous"></script>
    
    <script type = "text/javascript" >
    
    var datafeed = {{ data|json_encode|raw }};

    datafeed = JSON.parse(datafeed);
    var labelsData = datafeed.map(object => object.publish); 
    var dataForCharts = datafeed.map(totalOffers => totalOffers.total_per_day);

    var ctx = document.getElementById('my');
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: labelsData,
            datasets: [{
                label: '# of job offers',
                data: dataForCharts,
                backgroundColor: 'rgba(93, 164, 218, 0.5)',
                borderColor: 'rgba(93, 164, 218, 1)',
                borderWidth: 1
            }]
        },
        options: {
            responsive:false,
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });
    </script>

     <script>
        var mostPopular = {{ most_popular|json_encode|raw }}
        mostPopular = JSON.parse(mostPopular);
        //console.log(mostPopular);
        const skill_name = mostPopular.map(data =>data.skill_name);
        const ilosc = mostPopular.map(data => data.ilosc);

        var ctx = document.getElementById('mostPopular');
        var myChart = new Chart(ctx, {
        type: 'horizontalBar',
        data: {
            labels: skill_name,
            datasets: [{
                label: '# of offers with skill',
                data: ilosc,
                backgroundColor: 'rgba(93, 164, 218, 0.5)',
                borderColor: 'rgba(93, 164, 218, 1)',
                borderWidth: 1
            }]
        },
        options: {
            responsive:false,
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });

    </script>

    <script>

        var lineData = {{ line_data|json_encode|raw }};
        var newData = JSON.parse(lineData);
        const labelsWeek = newData.map(obj=>obj.week);
        const skillNum = newData.map(obj=>obj.many);

        var dataForCharts = {};

        var ctx = document.getElementById('line');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labelsWeek,
                datasets: [{
                    label: '# of job offers',
                    data: skillNum,
                    backgroundColor: 'rgba(93, 164, 218, 0.5)',
                    borderColor: 'rgba(93, 164, 218, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive:false,
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });

    </script>
    {% if many_skills is defined %}
    <div class="container">
        <div class="row">
        {% for skills in many_skills %}
            <div class="col-4">
                <table id="offers" class="table table-striped table-condensed table-bordered">
                    <thead>
                    <tr>
                        <th colspan="2" style="text-align: center">{{ skills|first.skill_name }} ({{ skills|first.amount }})</th>
                    </tr>
                    <tr>
                        <th>Skill Name</th>
                        <th>Amount</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for skill in skills %}
                        {% if loop.first %}
                        {% else %}
                        <tr>
                            <td>{{skill.skill_name}}</td>
                            <td>{{skill.amount}}</td>
                        </tr>
                        {% endif %}
                    {% endfor %}
                    </tbody>
                </table>
            </div>
        {% endfor %}
        </div>
    </div>
    {% endif %}

{% endblock %}